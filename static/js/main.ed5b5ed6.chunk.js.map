{"version":3,"sources":["logo.svg","components/Header/index.js","components/Header/Header.jsx","components/Loader/Loader.jsx","components/Loader/index.js","helpers.js","components/MarketData/MarketData.jsx","components/Favorites/index.js","components/Favorites/Favorites.jsx","components/TabContainer/TabContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","_ref","logo","title","react_default","a","createElement","className","src","alt","Loader","text","defaultProps","currencySymbol","currency_name","currency_symbols","USD","MXN","RUB","SEK","CHF","EUR","CRC","GBP","ILS","INR","JPY","KRW","NGN","PHP","PLN","PYG","THB","UAH","VND","undefined","MarketData","state","usd","handleChange","event","_this","setState","currentTarget","value","renderMarketData","_this$props","props","marketData","dataIsReady","type","min","defaultValue","placeholder","onChange","bind","Object","assertThisInitialized","map","item","key","concat","fromCurrency","currencyName","price","volume","toFixed","localStorage","getItem","includes","JSON","stringify","onClick","toggleFavorite","index_esm","color","components_Loader","this","Fragment","sortData","sorted","Component","Favorites","renderFavorites","favorites","parse","length","removeFavorite","TabContainer","esm","MarketData_MarketData","components_Favorites","App","marketURL","currenciesURL","getInitalFavorites","getData","_this$state","fetch","then","responce","json","data","market","toCurrencyId","fullData","currencies","filter","curr","currencyId","fromCurrencyId","catch","error","Error","copiedFavorites","toConsumableArray","favorite","push","setItem","sort","b","_this$state2","components_Header","components_TabContainer_TabContainer","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,iTCEzBC,SCEA,SAAAC,GAAqB,IAAlBC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,MACtB,OACEC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAChBH,EAAAC,EAAAC,cAAA,OAAKE,IAAKN,EAAMK,UAAU,YAAYE,IAAI,SAC1CL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcJ,oBCJ5BO,SAAS,SAAAT,GAAc,IAAXU,EAAWV,EAAXU,KAChB,OACEP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWI,MAI9BD,EAAOE,aAAe,CACpBD,KAAM,cAEOD,ICfAA,EDeAA,UERR,SAASG,EAAeC,GAC7B,IAAMC,EAAmB,CACvBC,IAAK,IACLC,IAAK,IACLC,IAAK,SACLC,IAAK,KACLC,IAAK,KACLC,IAAK,SACLC,IAAK,SACLC,IAAK,OACLC,IAAK,SACLC,IAAK,SACLC,IAAK,OACLC,IAAK,SACLC,IAAK,SACLC,IAAK,SACLC,IAAK,UACLC,IAAK,SACLC,IAAK,SACLC,IAAK,SACLC,IAAK,UAEP,QAAwCC,IAApCpB,EAAiBD,GACnB,OAAOC,EAAiBD,OCzBPsB,6MACnBC,MAAQ,CACNC,IAAK,KAEPC,aAAe,SAAAC,GACbC,EAAKC,SAAS,CACZJ,KAAME,EAAMG,cAAcC,WAG9BC,iBAAmB,WAAM,IAAAC,EACWL,EAAKM,MAAjCC,EADiBF,EACjBE,WACN,OAFuBF,EACLG,YAKd7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAd,QACOH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,QAEPH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,KACAH,EAAAC,EAAAC,cAAA,SACE4C,KAAK,SACL3C,UAAU,mBACV4C,IAAI,IACJC,aAAa,IACbC,YAAY,MACZC,SAAUb,EAAKF,aAAagB,KAAlBC,OAAAC,EAAA,EAAAD,CAAAf,OAGdrC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCACZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yDAAhB,iBAGAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yDAAhB,QAGAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yDAAhB,SAGAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yDAAhB,UAGAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yDAAhB,YAKJH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACXyC,EAAWU,IAAI,SAAAC,GAAI,OAClBvD,EAAAC,EAAAC,cAAA,MACEsD,IAAG,UAAAC,OAAYF,EAAKG,cACpBvD,UAAU,iCAEVH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qDACboD,EAAKI,cAER3D,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qDAAhB,GAAAsD,OACMF,EAAKG,aADX,MAAAD,OAC4BhD,EACxB8C,EAAKG,cAFT,MAKA1D,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qDACboD,EAAKK,OAER5D,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qDACboD,EAAKM,QAER7D,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qDAAhB,GAAAsD,QDxCUvB,ECyCMG,EAAKJ,MAAMC,IDzCZ0B,ECyCiBL,EAAKK,MDxChC,kBAAR1B,GAAoBA,GAAO,GAC5BA,EAAM0B,GAAOE,QAAQ,GAExB,oBCoCO,KAAAL,OAC+ChD,EAC3C8C,EAAKG,gBAIT1D,EAAAC,EAAAC,cAAA,UACEC,UACE4D,aACGC,QAAQ,aACRC,SAASC,KAAKC,UAAUZ,IACvB,iDACA,oBAENa,QAAS/B,EAAKM,MAAM0B,eAAelB,KAA1BC,OAAAC,EAAA,EAAAD,CAAAf,GAAqCkB,IAE7CQ,aACEC,QAAQ,aACRC,SAASC,KAAKC,UAAUZ,IACzBvD,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAQC,MAAM,YAEdvE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAWC,MAAM,cD7D9B,IAAmBrC,EAAK0B,MCjBlB5D,EAAAC,EAAAC,cAACsE,EAAD,+EAwFF,IACC5B,EAAe6B,KAAK9B,MAApBC,WACR,OACE5C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyE,SAAA,KACE1E,EAAAC,EAAAC,cAAA,UACEkE,QAASK,KAAK9B,MAAMgC,SAASxB,KAAKsB,KAAM7B,GACxCzC,UAAU,WAETsE,KAAK9B,MAAMiC,OAAS,YAAc,cAErC5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUsE,KAAKhC,4BA9GEoC,aCLzBC,6MCKbC,gBAAkB,WAChB,IAAMC,EAAYjB,aAAaC,QAAQ,aACnCE,KAAKe,MAAMlB,aAAaC,QAAQ,cAChC,GACJ,OAAIgB,EAAUE,OAAS,EAEnBlF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAd,QACOH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,SAGTH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCACZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yDAAhB,iBAGAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yDAAhB,QAGAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yDAAhB,SAGAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yDAAhB,YAKJH,EAAAC,EAAAC,cAAA,UACG8E,EAAU1B,IAAI,SAAAC,GAAI,OACjBvD,EAAAC,EAAAC,cAAA,MACEsD,IAAG,YAAAC,OAAcF,EAAKG,cACtBvD,UAAU,iCAEVH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qDACboD,EAAKI,cAER3D,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qDAAhB,GAAAsD,OACMF,EAAKG,aADX,MAAAD,OAC4BhD,EACxB8C,EAAKG,cAFT,MAKA1D,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qDACboD,EAAKK,OAER5D,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qDACboD,EAAKM,QAER7D,EAAAC,EAAAC,cAAA,UACEC,UAAU,iDACViE,QAAS/B,EAAKM,MAAMwC,eAAehC,KAA1BC,OAAAC,EAAA,EAAAD,CAAAf,GAAqCkB,IAE9CvD,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAQC,MAAM,kBASxBvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,0FAON,OAAOH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUsE,KAAKM,0BAtEFF,aCqCxBO,SAnCM,SAAAvF,GAOf,IANJ+C,EAMI/C,EANJ+C,WACAC,EAKIhD,EALJgD,YACAwB,EAIIxE,EAJJwE,eACAM,EAGI9E,EAHJ8E,SACAQ,EAEItF,EAFJsF,eACAP,EACI/E,EADJ+E,OAEA,OACE5E,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAACmF,EAAA,EAAD,KACErF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,KACErF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,YACArF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,mBAGFrF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,KACErF,EAAAC,EAAAC,cAACoF,EAAD,CACE1C,WAAYA,EACZC,YAAaA,EACbwB,eAAgBA,EAChBM,SAAUA,EACVC,OAAQA,KAGZ5E,EAAAC,EAAAC,cAACmF,EAAA,EAAD,KACErF,EAAAC,EAAAC,cAACqF,EAAD,CAAWJ,eAAgBA,UC5BlBK,oNACnBvD,MAAQ,CACNwD,UAAW,iDACXC,cAAe,qDACfV,UAAW,GACXpC,WAAY,GACZC,aAAa,EACb+B,QAAQ,KAcVe,mBAAqB,WACnB,IAAIX,EAAYd,KAAKe,MAAMlB,aAAaC,QAAQ,cAC5CE,KAAKe,MAAMlB,aAAaC,QAAQ,cAChC,GACJ3B,EAAKC,SAAS,CACZ0C,iBAIJY,QAAU,WAAM,IAAAC,EACuBxD,EAAKJ,MAAlCwD,EADMI,EACNJ,UAAWC,EADLG,EACKH,cACnBI,MAAML,GACHM,KAAK,SAAAC,GACJ,OAAOA,EAASC,SAEjBF,KAAK,SAAAG,GAKJ,OAJA7D,EAAKC,SAAS,CACZM,WAAYsD,EAAKC,OACjBC,aAAcF,EAAKE,eAEdN,MAAMJ,KAEdK,KAAK,SAAAC,GACJ,OAAOA,EAASC,SAEjBF,KAAK,SAAAG,GACJ,IAAMG,EAAWhE,EAAKJ,MAAMW,WAAWU,IAAI,SAAAC,GAIzC,OAHAA,EAAKI,aAAeuC,EAAKI,WAAWC,OAAO,SAAAC,GACzC,OAAOA,EAAKC,aAAelD,EAAKmD,iBAC/B,GAFiB,aAGbnD,IAETlB,EAAKC,SAAS,CACZO,aAAa,EACbD,WAAYyD,MAGfM,MAAM,SAAAC,GACL,MAAM,IAAIC,MAAMD,QAItBvC,eAAiB,SAAA6B,GACf,IAAIY,EAAe1D,OAAA2D,EAAA,EAAA3D,CAAOf,EAAKJ,MAAM+C,WACjCd,KAAKC,UAAU9B,EAAKJ,MAAM+C,WAAWf,SAASC,KAAKC,UAAU+B,IAC/DY,EAAkBA,EAAgBP,OAAO,SAASS,GAChD,OAAOA,EAASN,iBAAmBR,EAAKQ,iBAG1CI,EAAgBG,KAAKf,GAEvBnC,aAAamD,QAAQ,YAAahD,KAAKC,UAAU2C,IACjDzE,EAAKC,SAAS,CACZ0C,UAAW8B,OAGf3B,eAAiB,SAAAe,GACf,IAAIY,EAAe1D,OAAA2D,EAAA,EAAA3D,CAAOf,EAAKJ,MAAM+C,WACjCd,KAAKC,UAAU9B,EAAKJ,MAAM+C,WAAWf,SAASC,KAAKC,UAAU+B,MAC/DY,EAAkBA,EAAgBP,OAAO,SAASS,GAChD,OAAOA,EAASN,iBAAmBR,EAAKQ,kBAG5C3C,aAAamD,QAAQ,YAAahD,KAAKC,UAAU2C,IACjDzE,EAAKC,SAAS,CACZ0C,UAAW8B,OAIfnC,SAAW,SAAAuB,GACJ7D,EAAKJ,MAAM2C,OAMdvC,EAAKC,SAAS,CACZsC,QAASvC,EAAKJ,MAAM2C,OACpBhC,WAAYsD,EAAKiB,KAAK,SAAClH,EAAGmH,GAAJ,OAAUnH,EAAE2D,MAAQwD,EAAExD,UAP9CvB,EAAKC,SAAS,CACZsC,QAASvC,EAAKJ,MAAM2C,OACpBhC,WAAYsD,EAAKiB,KAAK,SAAClH,EAAGmH,GAAJ,OAAUA,EAAExD,MAAQ3D,EAAE2D,+FAnF3CM,KAAKe,MAAMlB,aAAaC,QAAQ,eACnCD,aAAamD,QAAQ,YAAa,kDAIpCzC,KAAKmB,UACLnB,KAAKkB,oGAsFE,IAAA0B,EACgD5C,KAAKxC,MAApD+C,EADDqC,EACCrC,UAAWpC,EADZyE,EACYzE,WAAYgC,EADxByC,EACwBzC,OAAQ/B,EADhCwE,EACgCxE,YACvC,OACE7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACoH,EAAD,CAAQvH,MAAM,eAAeD,KAAMA,MACnCE,EAAAC,EAAAC,cAACqH,EAAD,CACEvC,UAAWA,EACXpC,WAAYA,EACZyB,eAAgBI,KAAKJ,eACrBc,eAAgBV,KAAKU,eACrBR,SAAUF,KAAKE,SACfC,OAAQA,EACR/B,YAAaA,aApHQgC,cCMb2C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO9H,EAAAC,EAAAC,cAAC6H,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrC,KAAK,SAAAsC,GACjCA,EAAaC","file":"static/js/main.ed5b5ed6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.1a873129.svg\";","import Header from \"./Header\";\r\n\r\nexport default Header;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = ({ logo, title }) => {\r\n  return (\r\n    <header className=\"App__header\">\r\n      <img src={logo} className=\"App__logo\" alt=\"logo\" />\r\n      <h1 className=\"App__title\">{title}</h1>\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\nHeader.propTypes = {\r\n  logo: PropTypes.string,\r\n  title: PropTypes.string\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Loader.css\";\r\n\r\nconst Loader = ({ text }) => {\r\n  return (\r\n    <div className=\"all\">\r\n      <div className=\"loader\" />\r\n      <div className=\"loader2\" />\r\n      <p className=\"loading\">{text}</p>\r\n    </div>\r\n  );\r\n};\r\nLoader.defaultProps = {\r\n  text: \"Loading...\"\r\n};\r\nexport default Loader;\r\nLoader.propTypes = {\r\n  text: PropTypes.string\r\n};\r\n","import Loader from \"./Loader\";\r\nexport default Loader;\r\n","export function arrayContains(arr, val) {\r\n  var contains =\r\n    arr.filter(function(obj) {\r\n      return (obj.fromCurrencyId = val);\r\n    }).length >= 1;\r\n  return contains;\r\n}\r\n\r\nexport function currencySymbol(currency_name) {\r\n  const currency_symbols = {\r\n    USD: \"$\", // US Dollar\r\n    MXN: \"$\", // Mexican Peso\r\n    RUB: \"₽\", // Russian Ruble\r\n    SEK: \"kr\", // Swedish Krona\r\n    CHF: \"Fr\", // Swiss Franc\r\n    EUR: \"€\", // Euro\r\n    CRC: \"₡\", // Costa Rican Colón\r\n    GBP: \"£\", // British Pound Sterling\r\n    ILS: \"₪\", // Israeli New Sheqel\r\n    INR: \"₹\", // Indian Rupee\r\n    JPY: \"¥\", // Japanese Yen\r\n    KRW: \"₩\", // South Korean Won\r\n    NGN: \"₦\", // Nigerian Naira\r\n    PHP: \"₱\", // Philippine Peso\r\n    PLN: \"zł\", // Polish Zloty\r\n    PYG: \"₲\", // Paraguayan Guarani\r\n    THB: \"฿\", // Thai Baht\r\n    UAH: \"₴\", // Ukrainian Hryvnia\r\n    VND: \"₫\" // Vietnamese Dong\r\n  };\r\n  if (currency_symbols[currency_name] !== undefined) {\r\n    return currency_symbols[currency_name];\r\n  }\r\n}\r\n\r\nexport function calculate(usd, price) {\r\n  if (typeof usd === \"number\" && usd >= 0) {\r\n    return (usd / price).toFixed(2);\r\n  }\r\n  return \"Ivalid USD value\";\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Loader from \"../Loader\";\r\nimport { FaRegStar, FaStar } from \"react-icons/fa\";\r\nimport { currencySymbol, calculate } from \"../../helpers\";\r\n\r\nexport default class MarketData extends Component {\r\n  state = {\r\n    usd: 1\r\n  };\r\n  handleChange = event => {\r\n    this.setState({\r\n      usd: +event.currentTarget.value\r\n    });\r\n  };\r\n  renderMarketData = () => {\r\n    let { marketData, dataIsReady } = this.props;\r\n    if (!dataIsReady) {\r\n      return <Loader />;\r\n    } else {\r\n      return (\r\n        <div className=\"marketData\">\r\n          <div className=\"fx fx-center-v base__wrapper\">\r\n            <h1 className=\"base\">\r\n              Base <span className=\"base__value\">USD</span>\r\n            </h1>\r\n            <span className=\"dollarSign\">$</span>\r\n            <input\r\n              type=\"number\"\r\n              className=\"base__inputValue\"\r\n              min=\"0\"\r\n              defaultValue=\"1\"\r\n              placeholder=\"USD\"\r\n              onChange={this.handleChange.bind(this)}\r\n            />\r\n          </div>\r\n          <ul className=\"data__header\">\r\n            <li className=\"fx fx-center-v data__headerItem\">\r\n              <span className=\"data__col data__col1 data__headerCol data__headerCol1\">\r\n                Currency Name\r\n              </span>\r\n              <span className=\"data__col data__col2 data__headerCol data__headerCol2\">\r\n                Code\r\n              </span>\r\n              <span className=\"data__col data__col3 data__headerCol data__headerCol3\">\r\n                Price\r\n              </span>\r\n              <span className=\"data__col data__col4 data__headerCol data__headerCol4\">\r\n                Volume\r\n              </span>\r\n              <span className=\"data__col data__col5 data__headerCol data__headerCol5\">\r\n                Result\r\n              </span>\r\n            </li>\r\n          </ul>\r\n          <ul className=\"data__list\">\r\n            {marketData.map(item => (\r\n              <li\r\n                key={`market_${item.fromCurrency}`}\r\n                className=\"fx fx-center-v data__listItem\"\r\n              >\r\n                <span className=\"data__col data__col1 data__listCol data__listCol1\">\r\n                  {item.currencyName}\r\n                </span>\r\n                <span className=\"data__col data__col2 data__listCol data__listCol2\">\r\n                  {`${item.fromCurrency} (${currencySymbol(\r\n                    item.fromCurrency\r\n                  )})`}\r\n                </span>\r\n                <span className=\"data__col data__col3 data__listCol data__listCol3\">\r\n                  {item.price}\r\n                </span>\r\n                <span className=\"data__col data__col4 data__listCol data__listCol4\">\r\n                  {item.volume}\r\n                </span>\r\n                <span className=\"data__col data__col5 data__listCol data__listCol5\">\r\n                  {`${calculate(this.state.usd, item.price)} ${currencySymbol(\r\n                    item.fromCurrency\r\n                  )}`}\r\n                  {}\r\n                </span>\r\n                <strong\r\n                  className={\r\n                    localStorage\r\n                      .getItem(\"favorites\")\r\n                      .includes(JSON.stringify(item))\r\n                      ? \"addRemoveFavorite addRemoveFavorite--favorited\"\r\n                      : \"addRemoveFavorite\"\r\n                  }\r\n                  onClick={this.props.toggleFavorite.bind(this, item)}\r\n                >\r\n                  {localStorage\r\n                    .getItem(\"favorites\")\r\n                    .includes(JSON.stringify(item)) ? (\r\n                    <FaStar color=\"#f9d421\" />\r\n                  ) : (\r\n                    <FaRegStar color=\"#f9d421\" />\r\n                  )}\r\n                </strong>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  render() {\r\n    const { marketData } = this.props;\r\n    return (\r\n      <>\r\n        <button\r\n          onClick={this.props.sortData.bind(this, marketData)}\r\n          className=\"sortBtn\"\r\n        >\r\n          {this.props.sorted ? \"Ascending\" : \"Descending\"}\r\n        </button>\r\n        <div className=\"tabRow\">{this.renderMarketData()}</div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nMarketData.propTypes = {\r\n  marketData: PropTypes.array,\r\n  dataIsReady: PropTypes.bool\r\n};\r\n","import Favorites from \"./Favorites\";\r\nexport default Favorites;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FaStar } from \"react-icons/fa\";\r\nimport { currencySymbol } from \"../../helpers\";\r\n\r\nexport default class Favorites extends Component {\r\n  renderFavorites = () => {\r\n    const favorites = localStorage.getItem(\"favorites\")\r\n      ? JSON.parse(localStorage.getItem(\"favorites\"))\r\n      : [];\r\n    if (favorites.length > 0) {\r\n      return (\r\n        <div className=\"favorites marketData\">\r\n          <div className=\"fx fx-center-v base__wrapper\">\r\n            <h1 className=\"base\">\r\n              Base <span className=\"base__value\">USD</span>\r\n            </h1>\r\n          </div>\r\n          <ul className=\"data__header\">\r\n            <li className=\"fx fx-center-v data__headerItem\">\r\n              <span className=\"data__col data__col1 data__headerCol data__headerCol1\">\r\n                Currency Name\r\n              </span>\r\n              <span className=\"data__col data__col2 data__headerCol data__headerCol2\">\r\n                Code\r\n              </span>\r\n              <span className=\"data__col data__col3 data__headerCol data__headerCol3\">\r\n                Price\r\n              </span>\r\n              <span className=\"data__col data__col4 data__headerCol data__headerCol4\">\r\n                Volume\r\n              </span>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            {favorites.map(item => (\r\n              <li\r\n                key={`favorite_${item.fromCurrency}`}\r\n                className=\"fx fx-center-v data__listItem\"\r\n              >\r\n                <span className=\"data__col data__col1 data__listCol data__listCol1\">\r\n                  {item.currencyName}\r\n                </span>\r\n                <span className=\"data__col data__col2 data__listCol data__listCol2\">\r\n                  {`${item.fromCurrency} (${currencySymbol(\r\n                    item.fromCurrency\r\n                  )})`}\r\n                </span>\r\n                <span className=\"data__col data__col3 data__listCol data__listCol3\">\r\n                  {item.price}\r\n                </span>\r\n                <span className=\"data__col data__col4 data__listCol data__listCol4\">\r\n                  {item.volume}\r\n                </span>\r\n                <strong\r\n                  className=\"addRemoveFavorite addRemoveFavorite--favorited\"\r\n                  onClick={this.props.removeFavorite.bind(this, item)}\r\n                >\r\n                  <FaStar color=\"#f9d421\" />\r\n                </strong>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"favorites marketData\">\r\n          <h2 className=\"favorites__title--empty\">No Favorites</h2>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <div className=\"tabRow\">{this.renderFavorites()}</div>;\r\n  }\r\n}\r\nFavorites.propTypes = {\r\n  removeFavorite: PropTypes.func\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport MarketData from \"../MarketData/MarketData\";\r\nimport Favorites from \"../Favorites\";\r\nimport \"./TabContainer.css\";\r\n\r\nconst TabContainer = ({\r\n  marketData,\r\n  dataIsReady,\r\n  toggleFavorite,\r\n  sortData,\r\n  removeFavorite,\r\n  sorted\r\n}) => {\r\n  return (\r\n    <main>\r\n      <div className=\"tabContainer\">\r\n        <Tabs>\r\n          <TabList>\r\n            <Tab>USD</Tab>\r\n            <Tab>Favorites</Tab>\r\n          </TabList>\r\n\r\n          <TabPanel>\r\n            <MarketData\r\n              marketData={marketData}\r\n              dataIsReady={dataIsReady}\r\n              toggleFavorite={toggleFavorite}\r\n              sortData={sortData}\r\n              sorted={sorted}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <Favorites removeFavorite={removeFavorite} />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default TabContainer;\r\nTabContainer.propTypes = {\r\n  marketData: PropTypes.array,\r\n  dataIsReady: PropTypes.bool,\r\n  toggleFavorite: PropTypes.func,\r\n  sortData: PropTypes.func,\r\n  removeFavorite: PropTypes.func,\r\n  sorted: PropTypes.bool\r\n};\r\n","import React, { Component } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport Header from \"./components/Header\";\r\nimport TabContainer from \"./components/TabContainer/TabContainer\";\r\nimport \"./App.css\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    marketURL: \"https://exchange-test-app.herokuapp.com/market\",\r\n    currenciesURL: \"https://exchange-test-app.herokuapp.com/currencies\",\r\n    favorites: [],\r\n    marketData: [],\r\n    dataIsReady: false,\r\n    sorted: false\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (!JSON.parse(localStorage.getItem(\"favorites\"))) {\r\n      localStorage.setItem(\"favorites\", \"[]\");\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getData();\r\n    this.getInitalFavorites();\r\n  }\r\n  componentDidUpdate() {}\r\n\r\n  getInitalFavorites = () => {\r\n    let favorites = JSON.parse(localStorage.getItem(\"favorites\"))\r\n      ? JSON.parse(localStorage.getItem(\"favorites\"))\r\n      : [];\r\n    this.setState({\r\n      favorites\r\n    });\r\n  };\r\n\r\n  getData = () => {\r\n    const { marketURL, currenciesURL } = this.state;\r\n    fetch(marketURL)\r\n      .then(responce => {\r\n        return responce.json();\r\n      })\r\n      .then(data => {\r\n        this.setState({\r\n          marketData: data.market,\r\n          toCurrencyId: data.toCurrencyId\r\n        });\r\n        return fetch(currenciesURL);\r\n      })\r\n      .then(responce => {\r\n        return responce.json();\r\n      })\r\n      .then(data => {\r\n        const fullData = this.state.marketData.map(item => {\r\n          item.currencyName = data.currencies.filter(curr => {\r\n            return curr.currencyId === item.fromCurrencyId;\r\n          })[0][\"currencyName\"];\r\n          return item;\r\n        });\r\n        this.setState({\r\n          dataIsReady: true,\r\n          marketData: fullData\r\n        });\r\n      })\r\n      .catch(error => {\r\n        throw new Error(error);\r\n      });\r\n  };\r\n\r\n  toggleFavorite = data => {\r\n    let copiedFavorites = [...this.state.favorites];\r\n    if (JSON.stringify(this.state.favorites).includes(JSON.stringify(data))) {\r\n      copiedFavorites = copiedFavorites.filter(function(favorite) {\r\n        return favorite.fromCurrencyId !== data.fromCurrencyId;\r\n      });\r\n    } else {\r\n      copiedFavorites.push(data);\r\n    }\r\n    localStorage.setItem(\"favorites\", JSON.stringify(copiedFavorites));\r\n    this.setState({\r\n      favorites: copiedFavorites\r\n    });\r\n  };\r\n  removeFavorite = data => {\r\n    let copiedFavorites = [...this.state.favorites];\r\n    if (JSON.stringify(this.state.favorites).includes(JSON.stringify(data))) {\r\n      copiedFavorites = copiedFavorites.filter(function(favorite) {\r\n        return favorite.fromCurrencyId !== data.fromCurrencyId;\r\n      });\r\n    }\r\n    localStorage.setItem(\"favorites\", JSON.stringify(copiedFavorites));\r\n    this.setState({\r\n      favorites: copiedFavorites\r\n    });\r\n  };\r\n\r\n  sortData = data => {\r\n    if (!this.state.sorted) {\r\n      this.setState({\r\n        sorted: !this.state.sorted,\r\n        marketData: data.sort((a, b) => b.price - a.price)\r\n      });\r\n    } else {\r\n      this.setState({\r\n        sorted: !this.state.sorted,\r\n        marketData: data.sort((a, b) => a.price - b.price)\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { favorites, marketData, sorted, dataIsReady } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"container\">\r\n          <Header title=\"USD Exchange\" logo={logo} />\r\n          <TabContainer\r\n            favorites={favorites}\r\n            marketData={marketData}\r\n            toggleFavorite={this.toggleFavorite}\r\n            removeFavorite={this.removeFavorite}\r\n            sortData={this.sortData}\r\n            sorted={sorted}\r\n            dataIsReady={dataIsReady}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}